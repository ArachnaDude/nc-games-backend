{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/categories": {
    "description": "serves an array of all categories",
    "queries": [],
    "exampleResponse": {
      "categories": [
        {
          "description": "Players attempt to uncover each other's hidden role",
          "slug": "Social deduction"
        }
      ]
    }
  },
  "GET /api/reviews": {
    "description": "serves an array of all reviews",
    "queries": ["category", "sort_by", "order"],
    "exampleResponse": {
      "reviews": [
        {
          "owner": "String",
          "title": "String",
          "review_id": "Number",
          "review_body": "String",
          "designer": "String",
          "review_img_url": "String",
          "category": "String",
          "created_at": "String",
          "votes": "Number",
          "comment_count": "String"
        }
      ]
    }
  },
  "GET /api/reviews/:review_id": {
    "description": "serves a specific review object",
    "queries": [],
    "exampleResponse": {
      "review": {
        "owner": "String",
        "title": "String",
        "review_id": "Number",
        "review_body": "String",
        "designer": "String",
        "review_img_url": "String",
        "category": "String",
        "created_at": "String",
        "votes": "Number",
        "comment_count": "String"
      }
    }
  },
  "PATCH /api/reviews/:review_id": {
    "description": "accepts an object that patches review_id votes, returns updated article",
    "exampleBody": { "inc_votes": 1 },
    "exampleResponse": {
      "review": {
        "owner": "String",
        "title": "String",
        "review_id": "Number",
        "designer": "String",
        "review_img_url": "String",
        "category": "String",
        "created_at": "String",
        "votes": 1,
        "comment_count": "String"
      }
    }
  },
  "GET /api/reviews/:review_id/comments": {
    "description": "responds with an array of comments for a given review_id",
    "exampleResponse": {
      "comments": [
        {
          "comment_id": "Number",
          "votes": "Number",
          "created_at": "String",
          "author": "String",
          "body": "String"
        }
      ]
    }
  },
  "POST /api/reviews/:review_id/comments": {
    "description": "accepts an object that posts a comment",
    "exampleBody": { "username": "String", "body": "String" },
    "exampleResponse": {
      "comment": {
        "comment_id": "Number",
        "votes": "Number",
        "created_at": "String",
        "author": "String",
        "body": "String"
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes a comment by id, responds with status 204"
  },
  "GET /api/users": {
    "description": "serves a list of all usernames",
    "exampleResponse": { "users": [{ "username": "String" }] }
  },
  "GET /api/users/:username": {
    "description": "returns a single user object",
    "exampleResponse": {
      "user": { "username": "String", "avatar_url": "String", "name": "String" }
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "accepts an object that patches comment votes and returns the updated comment",
    "exampleBody": { "inc_votes": "Number" },
    "exampleResponse": {
      "comment": {
        "comment_id": "Number",
        "votes": "Number",
        "created_at": "String",
        "author": "String",
        "body": "String"
      }
    }
  }
}
